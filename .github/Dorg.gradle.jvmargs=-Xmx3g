name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx3g"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Gradle and cache
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Restore additional caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*','**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run unit tests
        run: ./gradlew testDebug --no-daemon

      - name: Build Debug APK
        run: ./gradlew assembleDebug --no-daemon

      - name: Optionally build Release APK
        if: github.ref == 'refs/heads/main'
        run: ./gradlew assembleRelease --no-daemon

      - name: Decode Android keystore
        if: secrets.ANDROID_KEYSTORE != ''
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 -d > release-keystore.jks

      - name: Sign and align release APK
        if: secrets.ANDROID_KEYSTORE != ''
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
            -keystore release-keystore.jks -storepass "$KEYSTORE_PASSWORD" \
            -keypass "$KEY_PASSWORD" app/build/outputs/apk/release/app-release-unsigned.apk "$KEY_ALIAS"
          zipalign -v -p 4 app/build/outputs/apk/release/app-release-unsigned.apk app/build/outputs/apk/release/app-release.apk

      - name: Upload Debug APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Upload Release APK
        if: exists('app/build/outputs/apk/release/app-release.apk')
        uses: actions/upload-artifact@v3
        with:
          name: app-release-apk
          path: app/build/outputs/apk/release/app-release.apk
app/build/outputs/apk/release/app-release.apkhttps://github.com/77Luca77/de.luca.ai/tree/main/github%2Fworkflows%2F.githubname: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Set up Gradle
      uses: gradle/gradle-build-action@v2

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build Debug APK
      run: ./gradlew assembleDebug

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: LucaAI-debug-apk
        path: app/build/outputs/apk/debug/app-debug.apk

/app
  build.gradle
  src/...
build.gradle
settings.gradle
gradle.properties
gradlew
gradlew.bat
/gradle/wrapper/gradle-wrapper.properties


---
MyAndroidApp/
├── .github/
│   └── workflows/
│       └── apk-build.yml
├── app/
│   ├── build.gradle
│   └── src/…
├── build.gradle
├── gradle.properties
├── gradlew
├── gradlew.bat
├── gradle/
│   └── wrapper/
│       └── gradle-wrapper.properties
├── settings.gradle
└── README.md<div class="steps">
        <h2>Installationsanleitung:</h2>
        <div class="step">
            <div class="step-number">1</div>
            <div>Laden Sie die APK-Datei herunter</div>
        </div>
        <div class="step">
            <div class="step-number">2</div>
            <div>Aktivieren Sie "Unbekannte Quellen" in den Einstellungen</div>
        </div>
        <div class="step">
            <div class="step-number">3</div>
            <div>Öffnen Sie die heruntergeladene APK-Datei</div>
        </div>
        <div class="step">
            <div class="step-number">4</div>
            <div>Folgen Sie den Installationsanweisungen</div>
        </div>
        <div class="step">
            <div class="step-number">5</div>
            <div>Starten Sie die App und geben Sie den PIN 0077 ein</div>
        </div>
    </div>

    <div class="warning">
        <strong>Wichtig:</strong> Für die Installation müssen Sie "Installation aus unbekannten Quellen" aktivieren.
        Dies finden Sie in den Einstellungen unter Sicherheit.
    </div>

    <h2>App-Funktionen:</h2>
    <div class="features">
        <div class="feature">20 KI-Persönlichkeiten</div>
        <div class="feature">Sprachausgabe</div>
        <div class="feature">Bildgenerierung</div>
        <div class="feature">Videogenerierung</div>
        <div class="feature">Websuche</div>
        <div class="feature">PIN-Geschützt</div>
    </div>

    <!-- Simulierter Download-Button -->
    <a href="#" class="download-btn" onclick="simulateDownload()">Luca AI APK Herunterladen (v1.0.0)</a>

    <p>Dateigröße: 78.5 MB | Version: 1.0.0 | Unterstützt: Android 8.0+</p>

    <div id="download-message" style="display: none; background: rgba(0, 255, 0, 0.2); padding: 15px; border-radius: 8px; margin-top: 20px; text-align: center;">
        Download gestartet! Prüfen Sie Ihre Downloads.
    </div>
</div>

<script>
    function simulateDownload() {
        document.getElementById('download-message').style.display = 'block';

        // In einer echten Umgebung würde hier der echte Download-Link stehen
        // window.location.href = 'https://ihre-domain.de/luca-ai.apk';

        // Für Testzwecke können wir eine kleine Wartezeit simulieren
        setTimeout(function() {
            alert('In einer echten Umgebung würde der Download jetzt starten. Da dies eine Simulation ist, müssen Sie die APK manuell von Ihrem Computer auf das Handy transferieren.');
        }, 1000);
    }
</script>